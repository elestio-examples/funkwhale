# version: "3"
# services:
#   funkwhale:
#     restart: always
#     # change version number here when you want to do an upgrade
#     image: funkwhale/all-in-one:1.2.9
#     env_file: 
#       - .env
#     environment:
#       # adapt to the pid/gid that own /srv/funkwhale/data
#       - PUID=1000
#       - PGID=1000
#     volumes:
#       - ./data:/data
#       - ./dir:/music:ro
#     ports:
#       - "172.17.0.1:5000:80"


 version: "3"
 
 services:
    postgres:
      restart: always
      env_file: .env
      image: postgres:11
      volumes:
        - ./data/postgres:/var/lib/postgresql/data
    redis:
      restart: always
      env_file: .env
      image: redis:3
      volumes:
        - ./data/redis:/data
    celeryworker:
      restart: always
      image: funkwhale/funkwhale:latest
      env_file: .env
      # Celery workers handle background tasks (such file imports or federation
      # messaging). The more processes a worker gets, the more tasks
      # can be processed in parallel. However, more processes also means
      # a bigger memory footprint.
      # By default, a worker will span a number of process equal to your number
      # of CPUs. You can adjust this, by explicitly setting the --concurrency
      # flag:
      #   celery -A funkwhale_api.taskapp worker -l INFO --concurrency=4
      command: celery -A funkwhale_api.taskapp worker -l INFO
      links:
        - postgres
        - redis
      environment:
        - C_FORCE_ROOT=true
      volumes:
        - "./music:/srv/funkwhale/data/music:ro"
        - "./media:/srv/funkwhale/data/media"

    celerybeat:
      restart: always
      image: funkwhale/funkwhale:latest
      env_file: .env
      command: celery -A funkwhale_api.taskapp beat -l INFO
      links:
        - postgres
        - redis

    api:
      restart: always
      image: funkwhale/funkwhale:latest
      env_file: .env
      volumes:
        - "./music:/srv/funkwhale/data/music:ro"
        - "./media:/srv/funkwhale/data/media"
        - "./static:/srv/funkwhale/data/static"
        - "./frontend:/frontend"
      ports:
        - "172.17.0.1:5000:80"
      links:
        - postgres
        - redis

    # nginx:
    #   restart: always
    #   image: nginx
    #   env_file:
    #     - .env
    #   environment:
    #     # Override those variables in your .env file if needed
    #     - "NGINX_MAX_BODY_SIZE=${NGINX_MAX_BODY_SIZE-100M}"
    #   volumes:
    #     - "./nginx/funkwhale.template:/etc/nginx/conf.d/funkwhale.template:ro"
    #     - "./nginx/funkwhale_proxy.conf:/etc/nginx/funkwhale_proxy.conf:ro"
    #     - "${MUSIC_DIRECTORY_SERVE_PATH-/srv/funkwhale/data/music}:${MUSIC_DIRECTORY_SERVE_PATH-/srv/funkwhale/data/music}:ro"
    #     - "${MEDIA_ROOT}:${MEDIA_ROOT}:ro"
    #     - "${STATIC_ROOT}:${STATIC_ROOT}:ro"
    #     - "${FUNKWHALE_FRONTEND_PATH}:/frontend:ro"
    #   ports:
    #     # override those variables in your .env file if needed
    #     - "${FUNKWHALE_API_IP}:${FUNKWHALE_API_PORT}:80"
    #   command: >
    #       sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\"
    #       < /etc/nginx/conf.d/funkwhale.template
    #       > /etc/nginx/conf.d/default.conf
    #       && cat /etc/nginx/conf.d/default.conf
    #       && nginx -g 'daemon off;'"
    #   links:
    #     - api